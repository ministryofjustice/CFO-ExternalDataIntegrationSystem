name: Deploy

on:
  push:
    branches:
      - develop
      - main

permissions:
  id-token: write # required for OIDC authentication with AWS

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

    env:
      REPOSITORY: dms_visualiser
      IMAGE_TAG: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}-${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # - name: Setup .NET
      #   uses: actions/setup-dotnet@v5
      #   with:
      #     dotnet-version: 10.0.x

      - name: Download .NET SDK 10 RC2
        run: |
          mkdir -p $HOME/dotnet
          curl -SL https://builds.dotnet.microsoft.com/dotnet/Sdk/10.0.100-rc.2.25502.107/dotnet-sdk-10.0.100-rc.2.25502.107-linux-x64.tar.gz \
            | tar -xz -C $HOME/dotnet
          echo "$HOME/dotnet" >> $GITHUB_PATH
          export DOTNET_ROOT=$HOME/dotnet

      - name: Build and Publish Image
        id: build-image
        run: |
          dotnet publish src/Visualiser/Visualiser.csproj \
          --configuration Release \
          --target:PublishContainer \
          --property:ContainerRegistry=${{ steps.login-ecr.outputs.registry }} \
          --property:ContainerRepository=$REPOSITORY \
          --property:ContainerImageTag=$IMAGE_TAG

          IMAGE=${{ steps.login-ecr.outputs.registry }}/${REPOSITORY}:${IMAGE_TAG}
          echo "IMAGE=${IMAGE}" >> $GITHUB_OUTPUT

      - name: Render ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.8.1
        with:
          task-definition: infra/dms-visualiser-task-def.json
          container-name: dms-visualiser-container
          image: ${{ steps.build-image.outputs.image }}
          environment-variables: |
            VERY_IMPORTANT=DO_NOT_DELETE_ME
            ASPNETCORE_ENVIRONMENT=Development
          secrets: |
            AzureAd__ClientId=${{ secrets.AWS_SECRETS_ARN }}:Client_ID::
            AzureAd__ClientSecret=${{ secrets.AWS_SECRETS_ARN }}:Client_Secret::
            API__BaseUrl=${{ secrets.AWS_SECRETS_ARN }}:API_Base_URL::

      - name: Deploy ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: dms-visualiser-service-1
          cluster: dms-visualiser-cluster